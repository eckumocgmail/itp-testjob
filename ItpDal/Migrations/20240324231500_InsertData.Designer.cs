// <auto-generated />
using System;
using ItpDal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ItpDal.Migrations
{
    [DbContext(typeof(ItpDbContext))]
    [Migration("20240324231500_InsertData")]
    partial class InsertData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.28");

            modelBuilder.Entity("ItpDal.Entities.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("397177b8-c22c-4c29-96be-4a4723137b9c"),
                            CreateDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectName = "ProjectName1",
                            UpdateDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ade417eb-8e9d-498d-83a9-52bb67af2832"),
                            CreateDate = new DateTime(2024, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectName = "ProjectName2",
                            UpdateDate = new DateTime(2024, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("287b58cb-ba89-4ec9-92e8-7507cade9a7e"),
                            CreateDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectName = "ProjectName3",
                            UpdateDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ItpDal.Entities.Task", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime?>("CancelDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("TaskDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ae469f73-d324-4447-beab-718acaa85b36"),
                            CreateDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateTime(2024, 3, 1, 0, 1, 1, 1, DateTimeKind.Unspecified),
                            ProjectId = new Guid("397177b8-c22c-4c29-96be-4a4723137b9c"),
                            StartDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TaskDescription = "",
                            TaskName = "TaskName1",
                            UpdateDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("5b5f1295-e233-4b9a-a220-68ad93d06918"),
                            CreateDate = new DateTime(2024, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateTime(2024, 3, 2, 0, 1, 1, 1, DateTimeKind.Unspecified),
                            ProjectId = new Guid("397177b8-c22c-4c29-96be-4a4723137b9c"),
                            StartDate = new DateTime(2024, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TaskDescription = "",
                            TaskName = "TaskName2",
                            UpdateDate = new DateTime(2024, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4987229d-40c6-48df-9ee6-15f204995d01"),
                            CreateDate = new DateTime(2024, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateTime(2024, 3, 2, 0, 1, 1, 1, DateTimeKind.Unspecified),
                            ProjectId = new Guid("397177b8-c22c-4c29-96be-4a4723137b9c"),
                            StartDate = new DateTime(2024, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TaskDescription = "",
                            TaskName = "TaskName3",
                            UpdateDate = new DateTime(2024, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f6dd65d7-b740-4b1f-9c76-fc0decae3602"),
                            CreateDate = new DateTime(2024, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateTime(2024, 3, 3, 0, 1, 1, 1, DateTimeKind.Unspecified),
                            ProjectId = new Guid("ade417eb-8e9d-498d-83a9-52bb67af2832"),
                            StartDate = new DateTime(2024, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TaskDescription = "",
                            TaskName = "TaskName1",
                            UpdateDate = new DateTime(2024, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("36758734-e101-48ed-ad26-d83e6b20ecf8"),
                            CreateDate = new DateTime(2024, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateTime(2024, 3, 2, 0, 1, 1, 1, DateTimeKind.Unspecified),
                            ProjectId = new Guid("ade417eb-8e9d-498d-83a9-52bb67af2832"),
                            StartDate = new DateTime(2024, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TaskDescription = "",
                            TaskName = "TaskName2",
                            UpdateDate = new DateTime(2024, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("affa7ae8-d32d-4c67-98b7-33b276363796"),
                            CreateDate = new DateTime(2024, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateTime(2024, 3, 2, 0, 1, 1, 1, DateTimeKind.Unspecified),
                            ProjectId = new Guid("ade417eb-8e9d-498d-83a9-52bb67af2832"),
                            StartDate = new DateTime(2024, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TaskDescription = "",
                            TaskName = "TaskName3",
                            UpdateDate = new DateTime(2024, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("8db1a244-4382-4a21-a050-afa89bde26c8"),
                            CreateDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateTime(2024, 3, 1, 0, 1, 1, 1, DateTimeKind.Unspecified),
                            ProjectId = new Guid("287b58cb-ba89-4ec9-92e8-7507cade9a7e"),
                            StartDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TaskDescription = "",
                            TaskName = "TaskName1",
                            UpdateDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("2f33204d-8af2-4515-8e89-c8c040faf0d5"),
                            CreateDate = new DateTime(2024, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateTime(2024, 3, 2, 0, 1, 1, 1, DateTimeKind.Unspecified),
                            ProjectId = new Guid("287b58cb-ba89-4ec9-92e8-7507cade9a7e"),
                            StartDate = new DateTime(2024, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TaskDescription = "",
                            TaskName = "TaskName2",
                            UpdateDate = new DateTime(2024, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("22069035-1318-4688-bbbc-71369de71aa5"),
                            CreateDate = new DateTime(2024, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateTime(2024, 3, 2, 0, 1, 1, 1, DateTimeKind.Unspecified),
                            ProjectId = new Guid("287b58cb-ba89-4ec9-92e8-7507cade9a7e"),
                            StartDate = new DateTime(2024, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TaskDescription = "",
                            TaskName = "TaskName3",
                            UpdateDate = new DateTime(2024, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ItpDal.Entities.TaskComments", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<byte>("CommentType")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.ToTable("TaskComments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e1834198-2a04-475d-9201-56250f781dfb"),
                            CommentType = (byte)1,
                            Content = new byte[] { 84, 104, 105, 115, 32, 105, 115, 32, 97, 32, 116, 101, 115, 116, 32, 49 },
                            TaskId = new Guid("ae469f73-d324-4447-beab-718acaa85b36")
                        },
                        new
                        {
                            Id = new Guid("b9aef972-5869-4939-b92d-eef6426bcc1f"),
                            CommentType = (byte)1,
                            Content = new byte[] { 84, 104, 105, 115, 32, 105, 115, 32, 97, 32, 116, 101, 115, 116, 32, 50 },
                            TaskId = new Guid("5b5f1295-e233-4b9a-a220-68ad93d06918")
                        });
                });

            modelBuilder.Entity("ItpDal.Entities.Task", b =>
                {
                    b.HasOne("ItpDal.Entities.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ItpDal.Entities.TaskComments", b =>
                {
                    b.HasOne("ItpDal.Entities.Task", null)
                        .WithMany("TaskComments")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ItpDal.Entities.Project", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("ItpDal.Entities.Task", b =>
                {
                    b.Navigation("TaskComments");
                });
#pragma warning restore 612, 618
        }
    }
}
